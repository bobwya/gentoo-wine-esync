--- a/0079-ntdll-server-Revert-to-old-implementation-of-hung-qu.patch	2018-10-07 03:47:12.000000000 +0100
+++ b/0079-ntdll-server-Revert-to-old-implementation-of-hung-qu.patch	2019-12-19 22:35:51.800454870 +0000
@@ -6,16 +6,13 @@
 MIME-Version: 1.0
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: 8bit
-
 By manually notifying the server every time we enter and exit a message wait.
-
 The hung queue logic keeps breaking. In the case of bug #9 it was breaking
 because we were waiting for more than 5 seconds on our queue and then someone
 sent us a message with SMTO_ABORTIFHUNG. Just stop fighting against the
 server and try to co√∂perate with it instead. It takes two extra server calls,
 but ideally the GUI thread isn't going to be in the same sort of performance-
 critical code that this patchset was written for.
-
 Signed-off-by: Zebediah Figura <z.figura12@gmail.com>
 ---
  dlls/ntdll/esync.c             | 53 +++++++++++++++++++++++++++++++-----------
@@ -25,7 +22,6 @@
  server/request.h               |  5 +++-
  server/trace.c                 |  8 +++++++
  6 files changed, 100 insertions(+), 23 deletions(-)
-
 diff --git a/dlls/ntdll/esync.c b/dlls/ntdll/esync.c
 index f678ae8..0ca8896 100644
 --- a/dlls/ntdll/esync.c
@@ -147,17 +143,14 @@
  };
  union generic_reply
  {
-@@ -6616,8 +6629,9 @@ union generic_reply
+@@ -6922,6 +6935,7 @@ union generic_reply
      struct open_esync_reply open_esync_reply;
      struct get_esync_fd_reply get_esync_fd_reply;
      struct get_esync_apc_fd_reply get_esync_apc_fd_reply;
 +    struct esync_msgwait_reply esync_msgwait_reply;
  };
  
--#define SERVER_PROTOCOL_VERSION 576
-+#define SERVER_PROTOCOL_VERSION 577
  
- #endif /* __WINE_WINE_SERVER_PROTOCOL_H */
 diff --git a/server/protocol.def b/server/protocol.def
 index 1c7cf76..b3db323 100644
 --- a/server/protocol.def
@@ -179,9 +172,9 @@
 index 1ca556e..fb60e53 100644
 --- a/server/queue.c
 +++ b/server/queue.c
-@@ -142,6 +142,7 @@ struct msg_queue
-     struct hook_table     *hooks;           /* hook table */
+@@ -148,6 +148,7 @@ struct msg_queue
      timeout_t              last_get_msg;    /* time of last get message call */
+     unsigned int           ignore_post_msg; /* ignore post messages newer than this unique id */
      int                    esync_fd;        /* esync file descriptor (signalled on message) */
 +    int                    esync_in_msgwait; /* our thread is currently waiting on us */
  };
@@ -318,4 +311,3 @@
  static const struct
 -- 
 2.7.4
-
