--- a/0042-ntdll-Use-shared-memory-segments-to-store-semaphore-.patch	2018-10-07 03:47:11.000000000 +0100
+++ b/0042-ntdll-Use-shared-memory-segments-to-store-semaphore-.patch	2019-04-12 18:38:01.353725440 +0100
@@ -3,20 +3,17 @@
 Date: Mon, 11 Jun 2018 13:10:36 -0500
 Subject: [PATCH 42/83] ntdll: Use shared memory segments to store semaphore
  and mutex state.
-
 This patch is pretty big, because it restructures the underlying esync
 objects. Instead of wrapping a struct esync, the semaphore and mutex structs
 are now contained within it, as a pointer to shared memory. This also means
 that we can move a lot of common code to create_esync() and open_esync()
 since now we don't have to allocate separate structures.
-
 Signed-off-by: Zebediah Figura <z.figura12@gmail.com>
 ---
  dlls/ntdll/esync.c  | 349 ++++++++++++++++++++++------------------------------
  dlls/ntdll/esync.h  |   1 +
  dlls/ntdll/thread.c |   4 +
  3 files changed, 155 insertions(+), 199 deletions(-)
-
 diff --git a/dlls/ntdll/esync.c b/dlls/ntdll/esync.c
 index 6409678..6a54405 100644
 --- a/dlls/ntdll/esync.c
@@ -677,8 +674,7 @@
 +        esync_init();
 +
      NtCreateKeyedEvent( &keyed_event, GENERIC_READ | GENERIC_WRITE, NULL, 0 );
- }
  
+     return exe_file;
 -- 
 2.7.4
-
