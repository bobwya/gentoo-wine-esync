--- a/0022-server-Create-eventfd-file-descriptors-for-message-q.patch	2018-11-01 17:19:43.000000000 +0000
+++ b/0022-server-Create-eventfd-file-descriptors-for-message-q.patch	2020-04-12 23:48:33.418284956 +0100
@@ -3,15 +3,12 @@
 Date: Fri, 8 Jun 2018 23:41:54 -0500
 Subject: [PATCH 22/83] server: Create eventfd file descriptors for message
  queues.
-
 Note that we don't have to worry about races here, because a thread can only
 check its own queue.
-
 Signed-off-by: Zebediah Figura <z.figura12@gmail.com>
 ---
  server/queue.c | 24 +++++++++++++++++++++++-
  1 file changed, 23 insertions(+), 1 deletion(-)
-
 diff --git a/server/queue.c b/server/queue.c
 index 6d56d528f7..1a5bbc7e8c 100644
 --- a/server/queue.c
@@ -25,9 +22,9 @@
  #define WM_NCMOUSEFIRST WM_NCMOUSEMOVE
  #define WM_NCMOUSELAST  (WM_NCMOUSEFIRST+(WM_MOUSELAST-WM_MOUSEFIRST))
 @@ -140,6 +141,7 @@ struct msg_queue
-     struct thread_input   *input;           /* thread input descriptor */
      struct hook_table     *hooks;           /* hook table */
      timeout_t              last_get_msg;    /* time of last get message call */
+     unsigned int           ignore_post_msg; /* ignore post messages newer than this unique id */
 +    int                    esync_fd;        /* esync file descriptor (signalled on message) */
  };
  
@@ -50,9 +47,9 @@
      no_signal,                 /* signal */
      no_get_fd,                 /* get_fd */
 @@ -300,12 +303,16 @@ static struct msg_queue *create_msg_queue( struct thread *thread, struct thread_
-         queue->input           = (struct thread_input *)grab_object( input );
          queue->hooks           = NULL;
          queue->last_get_msg    = current_time;
+         queue->ignore_post_msg = 0;
 +        queue->esync_fd        = -1;
          list_init( &queue->send_result );
          list_init( &queue->callback_result );
@@ -65,11 +62,11 @@
 +
          thread->queue = queue;
      }
-     if (new_input) release_object( new_input );
+     if (new_input)
 @@ -450,6 +457,9 @@ static inline void clear_queue_bits( struct msg_queue *queue, unsigned int bits
- {
      queue->wake_bits &= ~bits;
      queue->changed_bits &= ~bits;
+     update_shm_queue_bits( queue );
 +
 +    if (do_esync() && !is_signaled( queue ))
 +        esync_clear( queue->esync_fd );
@@ -111,4 +108,3 @@
  }
 -- 
 2.19.1
-
