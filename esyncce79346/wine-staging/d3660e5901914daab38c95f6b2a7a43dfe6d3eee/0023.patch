--- a/0023-ntdll-wineandroid.drv-winemac.drv-winex11.drv-Store-.patch	2018-11-01 17:19:43.000000000 +0000
+++ b/0023-ntdll-wineandroid.drv-winemac.drv-winex11.drv-Store-.patch	2019-03-14 14:26:15.375229237 +0000
@@ -3,11 +3,8 @@
 Date: Tue, 12 Jun 2018 10:01:08 -0500
 Subject: [PATCH 23/83] ntdll, wineandroid.drv, winemac.drv, winex11.drv: Store
  the thread's queue fd in ntdll.
-
 I originally had esync grab it from the server in order to avoid touching the USER drivers, but this doesn't really work since we might perform a MsgWait before ever doing any operations which might initialize the USER driver's thread data. Doing it this way also has the advantage that we won't use extra file descriptors.
-
 In any case I haven't bothered to guard this code with do_esync(); it'd require adding that function to each USER driver and it's pretty obvious it's not going to affect anything if esync is disabled.
-
 Signed-off-by: Zebediah Figura <z.figura12@gmail.com>
 ---
  dlls/ntdll/esync.c             | 6 ++++++
@@ -18,7 +15,6 @@
  dlls/winemac.drv/macdrv_main.c | 3 +++
  dlls/winex11.drv/x11drv_main.c | 3 +++
  7 files changed, 20 insertions(+)
-
 diff --git a/dlls/ntdll/esync.c b/dlls/ntdll/esync.c
 index f77c84a18f..c4faf69a13 100644
 --- a/dlls/ntdll/esync.c
@@ -40,20 +36,22 @@
 index 87b5d7078f..2c2445a58a 100644
 --- a/dlls/ntdll/ntdll.spec
 +++ b/dlls/ntdll/ntdll.spec
-@@ -1516,3 +1516,5 @@
+@@ -1512,5 +1512,7 @@
  # Filesystem
  @ cdecl wine_nt_to_unix_file_name(ptr ptr long long)
  @ cdecl wine_unix_to_nt_file_name(ptr ptr)
 +
 +@ cdecl __wine_esync_set_queue_fd(long)
+ 
+ # User shared data
 diff --git a/dlls/ntdll/ntdll_misc.h b/dlls/ntdll/ntdll_misc.h
 index eea1387863..0ce1f32b70 100644
 --- a/dlls/ntdll/ntdll_misc.h
 +++ b/dlls/ntdll/ntdll_misc.h
 @@ -235,6 +235,7 @@ struct ntdll_thread_data
-     int                wait_fd[2];    /* fd for sleeping server requests */
      BOOL               wow64_redir;   /* Wow64 filesystem redirection flag */
      pthread_t          pthread_id;    /* pthread thread id */
+     void              *pthread_stack; /* pthread stack */
 +    int                esync_queue_fd;/* fd to wait on for driver events */
  };
  
@@ -70,14 +68,14 @@
  
      signal_init_thread( teb );
      virtual_init_threading();
-@@ -658,6 +659,7 @@ NTSTATUS WINAPI RtlCreateUserThread( HANDLE process, SECURITY_DESCRIPTOR *descr,
+@@ -829,6 +830,7 @@ NTSTATUS WINAPI RtlCreateUserThread( HANDLE process, SECURITY_DESCRIPTOR *descr,
      thread_data->wait_fd[0]  = -1;
      thread_data->wait_fd[1]  = -1;
      thread_data->start_stack = (char *)teb->Tib.StackBase;
 +    thread_data->esync_queue_fd = -1;
  
-     pthread_attr_init( &attr );
-     pthread_attr_setstack( &attr, teb->DeallocationStack,
+     pthread_attr_init( &pthread_attr );
+     pthread_attr_setstack( &pthread_attr, teb->DeallocationStack,
 diff --git a/dlls/wineandroid.drv/window.c b/dlls/wineandroid.drv/window.c
 index aebe4c57b3..3bc3703eda 100644
 --- a/dlls/wineandroid.drv/window.c
@@ -143,4 +141,3 @@
          MESSAGE( "x11drv: Can't allocate handle for display fd\n" );
 -- 
 2.19.1
-
