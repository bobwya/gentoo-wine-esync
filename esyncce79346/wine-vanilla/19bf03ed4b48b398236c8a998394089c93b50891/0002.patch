--- a/0002-server-Create-server-objects-for-eventfd-based-synch.patch	2018-11-01 17:19:43.000000000 +0000
+++ b/0002-server-Create-server-objects-for-eventfd-based-synch.patch	2019-04-27 22:44:21.402682380 +0100
@@ -3,7 +3,6 @@
 Date: Thu, 7 Jun 2018 20:09:59 -0500
 Subject: [PATCH 02/83] server: Create server objects for eventfd-based
  synchronization objects.
-
 Signed-off-by: Zebediah Figura <z.figura12@gmail.com>
 ---
  include/wine/server_protocol.h |  19 +++++
@@ -14,7 +13,6 @@
  server/trace.c                 |  16 ++++
  6 files changed, 190 insertions(+)
  create mode 100644 server/esync.c
-
 diff --git a/include/wine/server_protocol.h b/include/wine/server_protocol.h
 index 0e85d1a082..98470eca3c 100644
 --- a/include/wine/server_protocol.h
@@ -43,29 +41,29 @@
  {
      REQ_new_process,
 @@ -5950,6 +5966,7 @@ enum request
-     REQ_set_job_limits,
-     REQ_set_job_completion_port,
      REQ_terminate_job,
+     REQ_suspend_process,
+     REQ_resume_process,
 +    REQ_create_esync,
      REQ_NB_REQUESTS
  };
  
 @@ -6248,6 +6265,7 @@ union generic_request
-     struct set_job_limits_request set_job_limits_request;
-     struct set_job_completion_port_request set_job_completion_port_request;
      struct terminate_job_request terminate_job_request;
+     struct suspend_process_request suspend_process_request;
+     struct resume_process_request resume_process_request;
 +    struct create_esync_request create_esync_request;
  };
  union generic_reply
  {
 @@ -6544,6 +6562,7 @@ union generic_reply
-     struct set_job_limits_reply set_job_limits_reply;
-     struct set_job_completion_port_reply set_job_completion_port_reply;
      struct terminate_job_reply terminate_job_reply;
+     struct suspend_process_reply suspend_process_reply;
+     struct resume_process_reply resume_process_reply;
 +    struct create_esync_reply create_esync_reply;
  };
  
- #define SERVER_PROTOCOL_VERSION 570
+ 
 diff --git a/server/Makefile.in b/server/Makefile.in
 index aaaa8d34d5..5d96d22774 100644
 --- a/server/Makefile.in
@@ -83,7 +81,7 @@
 index 0000000000..66cae244f6
 --- /dev/null
 +++ b/server/esync.c
-@@ -0,0 +1,136 @@
+@@ -0,0 +1,137 @@
 +/*
 + * eventfd-based synchronization objects
 + *
@@ -149,6 +147,7 @@
 +    directory_link_name,       /* link_name */
 +    default_unlink_name,       /* unlink_name */
 +    no_open_file,              /* open_file */
++    no_kernel_obj_list,        /* get_kernel_obj_list */
 +    no_close_handle,           /* close_handle */
 +    esync_destroy              /* destroy */
 +};
@@ -224,7 +223,7 @@
 index 6e02fbc501..b743674ebd 100644
 --- a/server/protocol.def
 +++ b/server/protocol.def
-@@ -3855,3 +3855,13 @@ struct handle_info
+@@ -3968,6 +3968,16 @@ struct handle_info
      obj_handle_t handle;          /* handle to the job */
      int          status;          /* process exit code */
  @END
@@ -238,30 +237,33 @@
 +@REPLY
 +    obj_handle_t handle;        /* handle to the object */
 +@END
+ 
+ 
+ /* Suspend a process */
 diff --git a/server/request.h b/server/request.h
 index 4610ca6868..242143d2c3 100644
 --- a/server/request.h
 +++ b/server/request.h
 @@ -403,6 +403,7 @@ DECL_HANDLER(process_in_job);
- DECL_HANDLER(set_job_limits);
- DECL_HANDLER(set_job_completion_port);
  DECL_HANDLER(terminate_job);
+ DECL_HANDLER(suspend_process);
+ DECL_HANDLER(resume_process);
 +DECL_HANDLER(create_esync);
  
  #ifdef WANT_REQUEST_HANDLERS
  
 @@ -700,6 +701,7 @@ static const req_handler req_handlers[REQ_NB_REQUESTS] =
-     (req_handler)req_set_job_limits,
-     (req_handler)req_set_job_completion_port,
      (req_handler)req_terminate_job,
+     (req_handler)req_suspend_process,
+     (req_handler)req_resume_process,
 +    (req_handler)req_create_esync,
  };
  
  C_ASSERT( sizeof(affinity_t) == 8 );
-@@ -2406,6 +2408,12 @@ C_ASSERT( sizeof(struct set_job_completion_port_request) == 32 );
- C_ASSERT( FIELD_OFFSET(struct terminate_job_request, handle) == 12 );
- C_ASSERT( FIELD_OFFSET(struct terminate_job_request, status) == 16 );
- C_ASSERT( sizeof(struct terminate_job_request) == 24 );
+@@ -2406,6 +2408,12 @@ C_ASSERT( FIELD_OFFSET(struct suspend_process_request, handle) == 12 );
+ C_ASSERT( sizeof(struct suspend_process_request) == 16 );
+ C_ASSERT( FIELD_OFFSET(struct resume_process_request, handle) == 12 );
+ C_ASSERT( sizeof(struct resume_process_request) == 16 );
 +C_ASSERT( FIELD_OFFSET(struct create_esync_request, access) == 12 );
 +C_ASSERT( FIELD_OFFSET(struct create_esync_request, initval) == 16 );
 +C_ASSERT( FIELD_OFFSET(struct create_esync_request, flags) == 20 );
@@ -275,8 +277,8 @@
 index 9a84067662..d29c16b495 100644
 --- a/server/trace.c
 +++ b/server/trace.c
-@@ -4541,6 +4541,19 @@ static void dump_terminate_job_request( const struct terminate_job_request *req
-     fprintf( stderr, ", status=%d", req->status );
+@@ -4541,6 +4541,19 @@ static void dump_resume_process_request( const struct resume_process_request *r
+     fprintf( stderr, " handle=%04x", req->handle );
  }
  
 +static void dump_create_esync_request( const struct create_esync_request *req )
@@ -296,9 +298,9 @@
      (dump_func)dump_new_process_request,
      (dump_func)dump_exec_process_request,
 @@ -4833,6 +4846,7 @@ static const dump_func req_dumpers[REQ_NB_REQUESTS] = {
-     (dump_func)dump_set_job_limits_request,
-     (dump_func)dump_set_job_completion_port_request,
      (dump_func)dump_terminate_job_request,
+     (dump_func)dump_suspend_process_request,
+     (dump_func)dump_resume_process_request,
 +    (dump_func)dump_create_esync_request,
  };
  
@@ -312,13 +314,12 @@
  
  static const char * const req_names[REQ_NB_REQUESTS] = {
 @@ -5421,6 +5436,7 @@ static const char * const req_names[REQ_NB_REQUESTS] = {
-     "set_job_limits",
-     "set_job_completion_port",
      "terminate_job",
+     "suspend_process",
+     "resume_process",
 +    "create_esync",
  };
  
  static const struct
 -- 
 2.19.1
-
