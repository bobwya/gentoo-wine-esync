--- a/0020-server-Create-eventfd-file-descriptors-for-thread-ob.patch	2018-11-01 17:19:43.000000000 +0000
+++ b/0020-server-Create-eventfd-file-descriptors-for-thread-ob.patch	2020-04-23 17:16:51.203275264 +0100
@@ -15,13 +15,13 @@
 --- a/server/thread.c
 +++ b/server/thread.c
 @@ -131,6 +131,7 @@ static const struct object_ops thread_apc_ops =
- 
  static void dump_thread( struct object *obj, int verbose );
+ static struct object_type *thread_get_type( struct object *obj );
  static int thread_signaled( struct object *obj, struct wait_queue_entry *entry );
 +static int thread_get_esync_fd( struct object *obj );
  static unsigned int thread_map_access( struct object *obj, unsigned int access );
  static void thread_poll_event( struct fd *fd, int event );
- static void destroy_thread( struct object *obj );
+ static struct list *thread_get_kernel_obj_list( struct object *obj );
 @@ -143,7 +144,7 @@ static const struct object_ops thread_ops =
      add_queue,                  /* add_queue */
      remove_queue,               /* remove_queue */
@@ -32,9 +32,9 @@
      no_signal,                  /* signal */
      no_get_fd,                  /* get_fd */
 @@ -202,6 +203,7 @@ static inline void init_thread_structure( struct thread *thread )
-     thread->suspend         = 0;
-     thread->desktop_users   = 0;
      thread->token           = NULL;
+     thread->desc            = NULL;
+     thread->desc_len        = 0;
 +    thread->esync_fd        = -1;
  
      thread->creation_time = current_time;
@@ -77,9 +77,9 @@
 --- a/server/thread.h
 +++ b/server/thread.h
 @@ -89,6 +89,7 @@ struct thread
-     timeout_t              creation_time; /* Thread creation time */
-     timeout_t              exit_time;     /* Thread exit time */
-     struct token          *token;         /* security token associated with this thread */
+     struct list            kernel_object; /* list of kernel object pointers */
+     data_size_t            desc_len;      /* thread description length in bytes */
+     WCHAR                 *desc;          /* thread description string */
 +    int                    esync_fd;      /* esync file descriptor (signalled on exit) */
  };
  
