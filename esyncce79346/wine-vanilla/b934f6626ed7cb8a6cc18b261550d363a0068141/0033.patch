--- a/0033-ntdll-server-Implement-NtOpenSemaphore.patch	2018-11-01 17:19:43.000000000 +0000
+++ b/0033-ntdll-server-Implement-NtOpenSemaphore.patch	2019-12-19 12:30:44.016538036 +0000
@@ -2,7 +2,6 @@
 From: Zebediah Figura <z.figura12@gmail.com>
 Date: Sun, 10 Jun 2018 00:29:27 -0500
 Subject: [PATCH 33/83] ntdll, server: Implement NtOpenSemaphore().
-
 Signed-off-by: Zebediah Figura <z.figura12@gmail.com>
 ---
  dlls/ntdll/esync.c             | 60 ++++++++++++++++++++++++++++++++++
@@ -14,7 +13,6 @@
  server/request.h               | 10 ++++++
  server/trace.c                 | 18 ++++++++++
  8 files changed, 156 insertions(+)
-
 diff --git a/dlls/ntdll/esync.c b/dlls/ntdll/esync.c
 index 0b373e36ed..f840b57171 100644
 --- a/dlls/ntdll/esync.c
@@ -150,24 +148,24 @@
  {
      struct request_header __header;
 @@ -5992,6 +6010,7 @@ enum request
-     REQ_set_job_completion_port,
-     REQ_terminate_job,
+     REQ_suspend_process,
+     REQ_resume_process,
      REQ_create_esync,
 +    REQ_open_esync,
      REQ_get_esync_fd,
      REQ_NB_REQUESTS
  };
 @@ -6292,6 +6311,7 @@ union generic_request
-     struct set_job_completion_port_request set_job_completion_port_request;
-     struct terminate_job_request terminate_job_request;
+     struct suspend_process_request suspend_process_request;
+     struct resume_process_request resume_process_request;
      struct create_esync_request create_esync_request;
 +    struct open_esync_request open_esync_request;
      struct get_esync_fd_request get_esync_fd_request;
  };
  union generic_reply
 @@ -6590,6 +6610,7 @@ union generic_reply
-     struct set_job_completion_port_reply set_job_completion_port_reply;
-     struct terminate_job_reply terminate_job_reply;
+     struct suspend_process_reply suspend_process_reply;
+     struct resume_process_reply resume_process_reply;
      struct create_esync_reply create_esync_reply;
 +    struct open_esync_reply open_esync_reply;
      struct get_esync_fd_reply get_esync_fd_reply;
@@ -242,16 +240,16 @@
 --- a/server/request.h
 +++ b/server/request.h
 @@ -404,6 +404,7 @@ DECL_HANDLER(set_job_limits);
- DECL_HANDLER(set_job_completion_port);
- DECL_HANDLER(terminate_job);
+ DECL_HANDLER(suspend_process);
+ DECL_HANDLER(resume_process);
  DECL_HANDLER(create_esync);
 +DECL_HANDLER(open_esync);
  DECL_HANDLER(get_esync_fd);
  
  #ifdef WANT_REQUEST_HANDLERS
 @@ -703,6 +704,7 @@ static const req_handler req_handlers[REQ_NB_REQUESTS] =
-     (req_handler)req_set_job_completion_port,
-     (req_handler)req_terminate_job,
+     (req_handler)req_suspend_process,
+     (req_handler)req_resume_process,
      (req_handler)req_create_esync,
 +    (req_handler)req_open_esync,
      (req_handler)req_get_esync_fd,
@@ -299,8 +297,8 @@
  {
      fprintf( stderr, " handle=%04x", req->handle );
 @@ -4859,6 +4874,7 @@ static const dump_func req_dumpers[REQ_NB_REQUESTS] = {
-     (dump_func)dump_set_job_completion_port_request,
-     (dump_func)dump_terminate_job_request,
+     (dump_func)dump_suspend_process_request,
+     (dump_func)dump_resume_process_request,
      (dump_func)dump_create_esync_request,
 +    (dump_func)dump_open_esync_request,
      (dump_func)dump_get_esync_fd_request,
@@ -315,8 +313,8 @@
  };
  
 @@ -5451,6 +5468,7 @@ static const char * const req_names[REQ_NB_REQUESTS] = {
-     "set_job_completion_port",
-     "terminate_job",
+     "suspend_process",
+     "resume_process",
      "create_esync",
 +    "open_esync",
      "get_esync_fd",
@@ -324,4 +322,3 @@
  
 -- 
 2.19.1
-
